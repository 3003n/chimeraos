name: Build ChimeraOS image matrix
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  workflow_call:
    inputs:
      postfix:
        type: string
        description: Postfix used in release.
        default: ''

jobs:
  list-branches:
    name: List branches
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.set-branches.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-branches
        # remove branch/ prefix
        run: echo "matrix=$(ls -d branch/*/ | sed 's/branch\///' | sed 's/\///' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
        shell: bash
  
  build-system-image:
    name: Build ChimeraOS image
    needs: list-branches
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        branch: ${{ fromJson(needs.list-branches.outputs.branches) }}
    outputs:
      version: ${{ steps.build_image.outputs.version }}
      display_version: ${{ steps.build_image.outputs.display_version }}
      display_name: ${{ steps.build_image.outputs.display_name }}
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - uses: actions/checkout@v4
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - uses: actions/download-artifact@v4
        with:
            pattern: AUR-packages*
            merge-multiple: true
            path: aur-pkgs/
      - uses: actions/download-artifact@v4
        with:
            pattern: Packages*
            merge-multiple: true
            path: pkgs/
      - name: Pre build image
        run: |
          env BUILD_BRANCH=${{ matrix.branch }} ./pre-build-image.sh
      
      - name: Build system image
        id: build_image
        run: |
          docker pull ${{ steps.meta.outputs.tags }}
          docker run -u root --rm --entrypoint=/workdir/build-image.sh -v $(pwd):/workdir -v $(pwd)/output:/output -v $GITHUB_OUTPUT:$GITHUB_OUTPUT -e "GITHUB_OUTPUT=$GITHUB_OUTPUT" -e "BUILD_BRANCH=${{ matrix.branch }}" --privileged=true ${{ steps.meta.outputs.tags }} $(echo ${GITHUB_SHA} | cut -c1-7)
          echo -e "$(docker inspect --format='{{index .RepoDigests 0}}' ${{ steps.meta.outputs.tags }})" > output/container-${{ matrix.branch }}.txt
      
      - name: list output
        run: |
          sudo chmod 644 output/*
          ls -lh output

      - name: Upload image
        uses: actions/upload-artifact@v4
        with:
          name: Build-image-${{ matrix.branch }}
          path: |
            output/${{ steps.build_image.outputs.image_filename_without_ext }}*img*
            output/build_info*.txt
            output/sha256sum*.txt
            output/container*.txt
          compression-level: 0
          overwrite: true

  publish-release:
    name: Publish release
    needs: build-system-image
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download image
        uses: actions/download-artifact@v4
        with:
          pattern: Build-image-*
          merge-multiple: true
          path: output/

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ needs.build-system-image.outputs.version }}
          target_commitish: ${{ github.sha }}
          name: ${{ needs.build-system-image.outputs.display_name }} ${{ needs.build-system-image.outputs.display_version }} ${{ inputs.postfix }}
          draft: false
          prerelease: true
          fail_on_unmatched_files: true
          files: |
            output/chimeraos*img*
            output/build_info*.txt
            output/sha256sum*.txt
            output/container*.txt