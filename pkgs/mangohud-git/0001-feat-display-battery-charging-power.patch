From d330b59e28520ca6c431a3be3806aec260fc62bc Mon Sep 17 00:00:00 2001
From: honjow <honjow311@gmail.com>
Date: Wed, 5 Mar 2025 04:16:29 +0800
Subject: [PATCH] feat: display battery charging power

- Remove special handling for charging state in getPower() function
- Display actual power value during battery charging
- Add +/- prefix to power value to indicate charging/discharging status
---
 src/battery.cpp      |  7 ++++---
 src/hud_elements.cpp | 12 +++++++++---
 2 files changed, 13 insertions(+), 6 deletions(-)

diff --git a/src/battery.cpp b/src/battery.cpp
index e5d311b..297217b 100644
--- a/src/battery.cpp
+++ b/src/battery.cpp
@@ -104,9 +104,10 @@ float BatteryStats::getPower() {
             state[i]=current_status;
         }
 
-        if (state[i] == "Charging" ||  state[i] == "Unknown" || state[i] == "Full") {
-            return 0;
-        }
+        // 移除对充电状态的特殊处理，让充电功率也能显示
+        // if (state[i] == "Charging" ||  state[i] == "Unknown" || state[i] == "Full") {
+        //     return 0;
+        // }
 
         if (fs::exists(current_power)) {
             std::ifstream input(current_power);
diff --git a/src/hud_elements.cpp b/src/hud_elements.cpp
index e820908..c7be0e0 100644
--- a/src/hud_elements.cpp
+++ b/src/hud_elements.cpp
@@ -213,7 +213,7 @@ void HudElements::gpu_stats(){
             else {
                 right_aligned_text(text_color, HUDElements.ralign_width, "%i", gpu->metrics.load);
                 ImGui::SameLine(0, 1.0f);
-                HUDElements.TextColored(text_color,"%%");
+                HUDElements.TextColored(HUDElements.colors.text, "%%");
                 // ImGui::SameLine(150);
                 // ImGui::Text("%s", "%");
             }
@@ -1038,10 +1038,16 @@ void HudElements::battery(){
             if (Battery_Stats.current_watt != 0) {
                 if (HUDElements.params->enabled[OVERLAY_PARAM_ENABLED_battery_watt]){
                     ImguiNextColumnOrNewRow();
+                    std::string prefix = "";
+                    if (Battery_Stats.current_status == "Charging") {
+                        prefix = "+"; //
+                    } else if (Battery_Stats.current_status == "Discharging") {
+                        prefix = "-"; //
+                    }
                     if (HUDElements.params->enabled[OVERLAY_PARAM_ENABLED_hud_compact] && Battery_Stats.current_watt >= 10.0f)
-                        right_aligned_text(HUDElements.colors.text, HUDElements.ralign_width, "%.0f", Battery_Stats.current_watt);
+                        right_aligned_text(HUDElements.colors.text, HUDElements.ralign_width, "%s%.0f", prefix.c_str(), Battery_Stats.current_watt);
                     else
-                        right_aligned_text(HUDElements.colors.text, HUDElements.ralign_width, "%.1f", Battery_Stats.current_watt);
+                        right_aligned_text(HUDElements.colors.text, HUDElements.ralign_width, "%s%.1f", prefix.c_str(), Battery_Stats.current_watt);
                     ImGui::SameLine(0,1.0f);
                     ImGui::PushFont(HUDElements.sw_stats->font1);
                     HUDElements.TextColored(HUDElements.colors.text, "W");
-- 
2.48.1

